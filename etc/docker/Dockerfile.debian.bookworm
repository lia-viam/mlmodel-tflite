FROM debian:bookworm

ENV HOME /root
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update

RUN apt-get -y dist-upgrade

RUN apt-get -y --no-install-recommends install \
    build-essential \
    ca-certificates \
    cmake \
    curl \
    doxygen \
    g++ \
    gdb \
    git \
    gnupg \
    gpg \
    less \
    libboost-all-dev \
    libc-ares-dev \
    libabsl-dev \
    libre2-dev \
    libssl-dev \
    libxtensor-dev \
    ninja-build \
    pkg-config \
    software-properties-common \
    sudo \
    wget

RUN bash -c 'wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add -'
RUN apt-add-repository -y 'deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-15 main'
# NOTE: For reasons I cannot explain, the first invocation of apt-add-repository fails
# but the second works fine. I suspect a Debian bug
RUN apt-add-repository -y 'deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-15 main'
RUN apt-get update

RUN apt-get -y --no-install-recommends install -t llvm-toolchain-bookworm-15 \
    clang-15 \
    clang-tidy-15

RUN mkdir -p /root/opt/src
# Build grpc (and proto, etc.) from source, since we don't have a good version on focal
RUN cd ${HOME}/opt/src && \
    git clone --recurse-submodules -b v1.51.3 --depth 1 --shallow-submodules https://github.com/grpc/grpc && \
    cd grpc && \
    cmake -S . -B build -G Ninja \
        -DgRPC_CARES_PROVIDER=package \
        -DgRPC_RE2_PROVIDER=package \
        -DgRPC_SSL_PROVIDER=package \
        -DgRPC_ZLIB_PROVIDER=package \
        -DgRPC_ABSL_PROVIDER=package \
        -DgRPC_INSTALL=ON \
        -DgRPC_BUILD_TESTS=OFF \
        -DBUILD_SHARED_LIBS=OFF \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DCMAKE_CXX_FLAGS="-fPIC" \
        -DCMAKE_C_FLAGS="-fPIC" \
        -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++" \
        -DCMAKE_FIND_LIBRARY_SUFFIXES=".a" \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo && \
    cmake --build build --target install -j3 -- -v && \
    cmake --install build

# Install Viam C++ SDK from source frozen at a tag
ENV PINNED_TAG="releases/v0.0.10"
RUN cd /root/opt/src && \
    git clone https://github.com/viamrobotics/viam-cpp-sdk && \
    cd viam-cpp-sdk && \
    git fetch --all --tags && \
    git checkout ${PINNED_TAG} && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_SHARED_LIBS=OFF \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DVIAMCPPSDK_USE_DYNAMIC_PROTOS=ON \
        -DVIAMCPPSDK_OFFLINE_PROTO_GENERATION=ON \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
	    -DBoost_USE_STATIC_LIBS=ON \
        -DCMAKE_CXX_FLAGS="-fPIC" \
        -DCMAKE_C_FLAGS="-fPIC" \
        -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++" \
        -DCMAKE_FIND_LIBRARY_SUFFIXES=".a" \
         .. -G Ninja  && \
    ninja all -j 4 && \
    ninja install -j 4 && \
    rm -rf /root/opt/src/viam-cpp-sdk

# Install GTest
RUN apt install -y libgtest-dev

RUN cd /root/opt/src && \
    git clone https://github.com/tensorflow/tensorflow.git && \
    cd tensorflow && \
    git fetch --all --tags && \
    git checkout v2.13.0 && \
    cd tensorflow/lite/c && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_SHARED_LIBS=OFF \
        -DTFLITE_C_BUILD_SHARED_LIBS= OFF \
        -DTFLITE_C_ABSL_PROVIDER=package \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DCMAKE_BUILD_TYPE=Release \
	    -DBoost_USE_STATIC_LIBS=ON \
        -DCMAKE_CXX_FLAGS="-fPIC" \
        -DCMAKE_C_FLAGS="-fPIC" \
        -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++" \
        -DCMAKE_FIND_LIBRARY_SUFFIXES=".a" \
         .. -G Ninja  && \
    ninja all -j 4 && \
    ninja install -j 4 

